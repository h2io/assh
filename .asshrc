#!/bin/bash

# prevent loops
[ "$ASSHRC" ] && return || export ASSHRC=true

xv_() {
  sd="$(dirname "${BASH_SOURCE[0]}")"
  xv=$(cat "${sd}/VERSION")
  
  if command -v git >/dev/null 2>&1; then
    xd=$(git -C "$sd" log -1 --format="%cd" --remotes=origin --date=iso-strict 2>/dev/null | xargs -I{} date -u -d "{}" +"%Y-%m-%dT%H:%M:%SZ" || echo "")
    [ -n "$xd" ] && xv="${xv%% *}"
    xs=$(git -C "$sd" rev-parse --short HEAD 2>/dev/null || echo "")
    [ -n "$(git -C "$sd" status --porcelain 2>/dev/null)" ] && xs="$xs-dirty"
  fi
  XV="h2.io/ASSH $xv${xd:+ $xd}${xs:+ $xs}"
}
p+ () {
    local r=""
    IFS=':' read -r -a ps <<< "$1:$2"
    for p in "${ps[@]}"; do
        [[ ":$r:" != *":$p:"* ]] && r="$r:$p"
    done
    echo "${r#:}"
}

# HELP: uses assh by default instead of ssh (use \ssh if you want the plain ssh)
alias ssh='assh'

# HELP: history | grep 
alias ,hg='history|grep'

# HELP: ls ordered by size, expanded time style (-h for human readable)
alias ,ls='ls -a -l --human-readable --size --block-size=1 -S -F --time-style=+"%Y-%m-%d %H:%M:%S" -r'

# HELP: du ordered, human readable
alias ,du='function _du() { du --max-depth=1 -h "${1:-./}" 2>/dev/null | sort -h; }; _du'

# HELP: clean current history
alias ,h0='unset HISTFILE && history -c && history -r ~/.bash_history'

if [ "$XH" ]; then
	# executed via assh login
	[ -r /etc/profile ] && . /etc/profile
	[ -r ~/.bash_profile ] && . ~/.bash_profile ||
	[ -r ~/.bash_login ] && . ~/.bash_login ||
	[ -r ~/.profile ] && . ~/.profile

	export XPATH=$XH:$XH/bin
	XL=$XH/lib			# prepare XH libray path to load
	PATH=$(p+ $XPATH $PATH)
fi
if [ "$LH" ]; then
	export LCHAIN+="+${USER}"
	export LU=${LH%/*}
	export LD=$(ls -d ${LU}/.assh*/bin 2>/dev/null| sort -u | tr '\n' ' ')

	export XV && xv_
	[ -n "$XD" ] && PROMPT_COMMAND=xv_

	# P1: localy sourced from .bashrc (development)
	export LPATH="${LPATH:+$LPATH:}$LH"
	shopt -s nullglob
	for dir in $LD; do
		[[ -d "$dir" ]] || continue  # Skip if not a directory
		LPATH="$LPATH:$dir"
	done

	: "${XL:=$LH/lib}"		# use LH library path if XH is not present
	PATH=$(p+ $PATH $LPATH)
fi

# load libraries
for file in $XL/*; do
	[[ -r "$file" ]] && . "$file"
done
